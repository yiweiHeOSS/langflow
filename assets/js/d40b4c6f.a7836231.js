"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[4638],{28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>l});var t=n(96540);const i={},r=t.createContext(i);function o(e){const s=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}},95826:(e,s,n)=>{n.r(s),n.d(s,{contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"type":"api","id":"create-response","title":"Create Response","description":"","slug":"/create-response","frontMatter":{},"api":{"tags":["OpenAI Responses API"],"description":"Create a response using OpenAI Responses API format.\\n\\nThis endpoint accepts a flow_id in the model parameter and processes\\nthe input through the specified Langflow flow.\\n\\nArgs:\\n    request: OpenAI Responses API request with model (flow_id) and input\\n    background_tasks: FastAPI background task manager\\n    api_key_user: Authenticated user from API key\\n    http_request: The incoming HTTP request\\n    telemetry_service: Telemetry service for logging\\n\\nReturns:\\n    OpenAI-compatible response or streaming response\\n\\nRaises:\\n    HTTPException: For validation errors or flow execution issues","operationId":"create_response_api_v1_responses_post","requestBody":{"content":{"application/json":{"schema":{"properties":{"model":{"type":"string","title":"Model","description":"The flow ID to execute (used instead of OpenAI model)"},"input":{"type":"string","title":"Input","description":"The input text to process"},"stream":{"type":"boolean","title":"Stream","description":"Whether to stream the response","default":false},"background":{"type":"boolean","title":"Background","description":"Whether to process in background","default":false},"tools":{"anyOf":[{"items":{},"type":"array"},{"type":"null"}],"title":"Tools","description":"Tools are not supported yet"},"previous_response_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Previous Response Id","description":"ID of previous response to continue conversation"},"include":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Include","description":"Additional response data to include, e.g., [\'tool_call.results\']"}},"type":"object","required":["model","input"],"title":"OpenAIResponsesRequest","description":"OpenAI-compatible responses request with flow_id as model parameter."}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"properties":{"detail":{"items":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"}}}}},"security":[{"API key query":[]},{"API key header":[]}],"method":"post","path":"/api/v1/responses","parameters":[],"securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"api/v1/login"}}},"API key query":{"type":"apiKey","in":"query","name":"x-api-key"},"API key header":{"type":"apiKey","in":"header","name":"x-api-key"}},"jsonRequestBodyExample":{"model":"string","input":"string","stream":false,"background":false},"info":{"title":"Langflow","version":"1.6.0"},"postman":{"name":"Create Response","description":{"content":"Create a response using OpenAI Responses API format.\\n\\nThis endpoint accepts a flow_id in the model parameter and processes\\nthe input through the specified Langflow flow.\\n\\nArgs:\\n    request: OpenAI Responses API request with model (flow_id) and input\\n    background_tasks: FastAPI background task manager\\n    api_key_user: Authenticated user from API key\\n    http_request: The incoming HTTP request\\n    telemetry_service: Telemetry service for logging\\n\\nReturns:\\n    OpenAI-compatible response or streaming response\\n\\nRaises:\\n    HTTPException: For validation errors or flow execution issues","type":"text/plain"},"url":{"path":["api","v1","responses"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"method":"POST","body":{"mode":"raw","raw":"{\\n  \\"model\\": \\"<string>\\",\\n  \\"input\\": \\"<string>\\",\\n  \\"stream\\": false,\\n  \\"background\\": false,\\n  \\"previous_response_id\\": \\"<string>\\",\\n  \\"include\\": [\\n    \\"<string>\\",\\n    \\"<string>\\"\\n  ]\\n}","options":{"raw":{"language":"json"}}},"auth":{"type":"apikey","apikey":[{"type":"any","value":"x-api-key","key":"key"},{"type":"any","value":"{{apiKey}}","key":"value"},{"type":"any","value":"query","key":"in"}]}}},"source":"@site/openapi.json","sourceDirName":".","permalink":"/api/create-response","previous":{"title":"Check Installed Mcp Servers","permalink":"/api/check-installed-mcp-servers"},"next":{"title":"List Files","permalink":"/api/list-files-1"}}');var i=n(74848),r=n(28453);const o={},l="Create Response",a=[];function d(e){const s={h1:"h1",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"create-response",children:"Create Response"})}),"\n",(0,i.jsx)(s.p,{children:"Create a response using OpenAI Responses API format."}),"\n",(0,i.jsx)(s.p,{children:"This endpoint accepts a flow_id in the model parameter and processes\nthe input through the specified Langflow flow."}),"\n",(0,i.jsx)(s.p,{children:"Args:\nrequest: OpenAI Responses API request with model (flow_id) and input\nbackground_tasks: FastAPI background task manager\napi_key_user: Authenticated user from API key\nhttp_request: The incoming HTTP request\ntelemetry_service: Telemetry service for logging"}),"\n",(0,i.jsx)(s.p,{children:"Returns:\nOpenAI-compatible response or streaming response"}),"\n",(0,i.jsx)(s.p,{children:"Raises:\nHTTPException: For validation errors or flow execution issues"}),"\n",(0,i.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:(0,i.jsxs)("th",{style:{textAlign:"left"},children:[(0,i.jsx)("span",{children:"Request Body "}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,i.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"},children:" REQUIRED"}),(0,i.jsx)("div",{})]})})}),(0,i.jsxs)("tbody",{children:[(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"model"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Model"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,i.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"},children:" REQUIRED"}),(0,i.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,i.jsx)(s.p,{children:"The flow ID to execute (used instead of OpenAI model)"})})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"input"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Input"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,i.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"},children:" REQUIRED"}),(0,i.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,i.jsx)(s.p,{children:"The input text to process"})})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"stream"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Stream"}),(0,i.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,i.jsx)(s.p,{children:"Whether to stream the response"})})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"background"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Background"}),(0,i.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,i.jsx)(s.p,{children:"Whether to process in background"})})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"tools"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Tools"}),(0,i.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,i.jsx)(s.p,{children:"Tools are not supported yet"})})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"previous_response_id"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Previous Response Id"}),(0,i.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,i.jsx)(s.p,{children:"ID of previous response to continue conversation"})})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"include"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Include"}),(0,i.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,i.jsx)(s.p,{children:"Additional response data to include, e.g., ['tool_call.results']"})})]})})]})]}),"\n",(0,i.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:(0,i.jsx)("th",{style:{textAlign:"left"},children:"Responses"})})}),(0,i.jsxs)("tbody",{children:[(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsxs)("div",{style:{display:"flex"},children:[(0,i.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,i.jsx)("code",{children:"200"})}),(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Successful Response"})})]}),(0,i.jsx)("div",{children:(0,i.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:(0,i.jsxs)("th",{style:{textAlign:"left"},children:[(0,i.jsx)("span",{children:"Schema "}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,i.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,i.jsx)("div",{})]})})}),(0,i.jsx)("tbody",{children:(0,i.jsx)("tr",{children:(0,i.jsx)("td",{children:(0,i.jsx)("span",{style:{opacity:"0.6"},children:" undefined"})})})})]})})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsxs)("div",{style:{display:"flex"},children:[(0,i.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,i.jsx)("code",{children:"422"})}),(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Validation Error"})})]}),(0,i.jsx)("div",{children:(0,i.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:(0,i.jsxs)("th",{style:{textAlign:"left"},children:[(0,i.jsx)("span",{children:"Schema "}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,i.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,i.jsx)("div",{})]})})}),(0,i.jsx)("tbody",{children:(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"detail"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" object[]"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,i.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,i.jsx)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:(0,i.jsxs)("tbody",{children:[(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"loc"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" undefined[]"})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"msg"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Message"})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"type"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Error Type"})]})})]})})]})})})]})})]})})]})]})]})}function p(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);