"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[8750],{25194:(e,n,o)=>{o.d(n,{Ay:()=>i,RM:()=>r});var t=o(74848),s=o(28453);const r=[];function a(e){const n={code:"code",em:"em",p:"p",...(0,s.R)(),...e.components},{Details:o}=n;return o||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(o,{children:[(0,t.jsx)("summary",{children:"How do agents work?"}),(0,t.jsxs)(n.p,{children:["Agents extend Large Language Models (LLMs) by integrating ",(0,t.jsx)(n.em,{children:"tools"}),", which are functions that provide additional context and enable autonomous task execution.\nThese integrations make agents more specialized and powerful than standalone LLMs."]}),(0,t.jsx)(n.p,{children:"Whereas an LLM might generate acceptable, inert responses to general queries and tasks, an agent can leverage the integrated context and tools to provide more relevant responses and even take action.\nFor example, you might create an agent that can access your company's documentation, repositories, and other resources to help your team with tasks that require knowledge of your specific products, customers, and code."}),(0,t.jsx)(n.p,{children:"Agents use LLMs as a reasoning engine to process input, determine which actions to take to address the query, and then generate a response.\nThe response could be a typical text-based LLM response, or it could involve an action, like editing a file, running a script, or calling an external API."}),(0,t.jsxs)(n.p,{children:["In an agentic context, tools are functions that the agent can run to perform tasks or access external resources.\nA function is wrapped as a ",(0,t.jsx)(n.code,{children:"Tool"})," object with a common interface that the agent understands.\nAgents become aware of tools through tool registration, which is when the agent is provided a list of available tools typically at agent initialization.\nThe ",(0,t.jsx)(n.code,{children:"Tool"})," object's description tells the agent what the tool can do so that it can decide whether the tool is appropriate for a given request."]})]})}function i(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>i});var t=o(96540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}},81451:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"Components/components-agents","title":"Agents","description":"Langflow\'s Agent and MCP Tools components are critical for building agent flows.","source":"@site/docs/Components/components-agents.mdx","sourceDirName":"Components","slug":"/components-agents","permalink":"/components-agents","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Agents","slug":"/components-agents"},"sidebar":"docs","previous":{"title":"Input / Output","permalink":"/components-io"},"next":{"title":"Language Model","permalink":"/components-models"}}');var s=o(74848),r=o(28453),a=o(25194);const i={title:"Agents",slug:"/components-agents"},l=void 0,c={},d=[...a.RM,{value:"Examples of agent flows",id:"examples-of-agent-flows",level:2},{value:"Agent component",id:"agent-component",level:2},{value:"MCP Tools component",id:"mcp-connection",level:2},{value:"See also",id:"see-also",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:o}=n;return o||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Langflow's ",(0,s.jsx)(n.strong,{children:"Agent"})," and ",(0,s.jsx)(n.strong,{children:"MCP Tools"})," components are critical for building agent flows.\nThese components define the behavior and capabilities of AI agents in your flows."]}),"\n",(0,s.jsx)(a.Ay,{}),"\n",(0,s.jsx)(n.h2,{id:"examples-of-agent-flows",children:"Examples of agent flows"}),"\n",(0,s.jsxs)(n.p,{children:["For examples of flows using the ",(0,s.jsx)(n.strong,{children:"Agent"})," and ",(0,s.jsx)(n.strong,{children:"MCP Tools"})," components, see the following:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/get-started-quickstart",children:"Langflow quickstart"}),": Start with the ",(0,s.jsx)(n.strong,{children:"Simple Agent"})," template, modify its tools, and then learn how to use an agent flow in an application."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"Simple Agent"})," template creates a basic agent flow with an ",(0,s.jsx)(n.strong,{children:"Agent"})," component that can use two other Langflow components as tools.\nThe LLM specified in the ",(0,s.jsx)(n.strong,{children:"Agent"})," component's settings can use its own built-in functionality as well as the functionality provided by the connected tools when generating responses."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/agents-tools#use-an-agent-as-a-tool",children:"Use an agent as a tool"}),": Create a multi-agent flow."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/mcp-client",children:"Use Langflow as an MCP client"})," and ",(0,s.jsx)(n.a,{href:"/mcp-server",children:"Use Langflow as an MCP server"}),": Use the ",(0,s.jsx)(n.strong,{children:"Agent"})," and ",(0,s.jsx)(n.strong,{children:"MCP Tools"})," components to implement the Model Context Protocol (MCP) in your flows."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"agent-component",children:"Agent component"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"Agent"})," component is the primary agent actor in your agent flows.\nThis component uses an LLM integration to respond to input, such as a chat message or file upload."]}),"\n",(0,s.jsxs)(n.p,{children:["The agent can use the tools already available in the base LLM as well as additional tools that you connect to the ",(0,s.jsx)(n.strong,{children:"Agent"})," component's ",(0,s.jsx)(n.strong,{children:"Tools"})," port.\nYou can connect any Langflow component as a tool, including other ",(0,s.jsx)(n.strong,{children:"Agent"})," components and MCP servers through the ",(0,s.jsxs)(n.a,{href:"#mcp-connection",children:[(0,s.jsx)(n.strong,{children:"MCP Tools"})," component"]}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["For more information about using this component, see ",(0,s.jsx)(n.a,{href:"/agents",children:"Use Langflow agents"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"mcp-connection",children:"MCP Tools component"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"MCP Tools"})," component connects to a Model Context Protocol (MCP) server and exposes the MCP server's functions as tools for Langflow agents to use to respond to input."]}),"\n",(0,s.jsxs)(n.p,{children:["In addition to publicly available MCP servers and your own custom-built MCP servers, you can connect Langflow MCP servers, which allow your agent to use your Langflow flows as tools.\nTo do this, use the ",(0,s.jsx)(n.strong,{children:"MCP Tools"})," component's ",(0,s.jsx)(n.a,{href:"/mcp-client#mcp-sse-mode",children:"SSE mode"})," to connect to your Langflow project's MCP server at the ",(0,s.jsx)(n.code,{children:"/api/v1/mcp/sse"})," endpoint."]}),"\n",(0,s.jsxs)(n.p,{children:["For more information, see ",(0,s.jsx)(n.a,{href:"/mcp-client",children:"Use Langflow as an MCP client"})," and ",(0,s.jsx)(n.a,{href:"/mcp-server",children:"Use Langflow as an MCP server"}),"."]}),"\n",(0,s.jsxs)(o,{children:[(0,s.jsx)("summary",{children:"Earlier versions of the MCP Tools component"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["In Langflow version 1.5, the ",(0,s.jsx)(n.strong,{children:"MCP Connection"})," component was renamed to the ",(0,s.jsx)(n.strong,{children:"MCP Tools"})," component."]}),"\n",(0,s.jsxs)(n.li,{children:["In Langflow version 1.3, the ",(0,s.jsx)(n.strong,{children:"MCP Tools (stdio)"})," and ",(0,s.jsx)(n.strong,{children:"MCP Tools (SSE)"})," components were removed and replaced by the unified ",(0,s.jsx)(n.strong,{children:"MCP Connection"})," component, which was later renamed to ",(0,s.jsx)(n.strong,{children:"MCP Tools"}),"."]}),"\n"]})]}),"\n",(0,s.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsxs)(n.a,{href:"/components-helpers#message-history",children:[(0,s.jsx)(n.strong,{children:"Message History"})," component"]})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/memory#store-chat-memory",children:"Store chat memory"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/components-bundle-components",children:"Bundles"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/bundles-langchain#legacy-langchain-components",children:"Legacy LangChain components"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);