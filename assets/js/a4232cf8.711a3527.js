"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[446],{17886:(e,n,r)=>{r.d(n,{A:()=>o});r(96540);var t=r(64058),s=r(74848);function o({name:e,...n}){const r=t[e];return r?(0,s.jsx)(r,{...n}):null}},31929:(e,n,r)=>{r.d(n,{Ay:()=>a,RM:()=>c});var t=r(74848),s=r(28453),o=r(17886);const c=[];function i(e){const n={a:"a",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(n.p,{children:["Some parameters are hidden by default in the visual editor.\nYou can modify all parameters through the ",(0,t.jsx)(o.A,{name:"SlidersHorizontal","aria-hidden":"true"})," ",(0,t.jsx)(n.strong,{children:"Controls"})," in the ",(0,t.jsx)(n.a,{href:"/concepts-components#component-menus",children:"component's header menu"}),"."]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}},50005:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>o});var t=r(74848),s=r(28453);const o=[];function c(e){const n={a:"a",code:"code",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Because Langflow is based on LangChain, vector store components use an instance of ",(0,t.jsx)(n.a,{href:"https://docs.langchain.com/oss/python/integrations/vectorstores",children:"LangChain vector store"})," to drive the underlying read and write functions.\nThese instances are provider-specific and configured according to the component's parameters, such as the connection string, index name, and schema."]}),"\n",(0,t.jsxs)(n.p,{children:["In component code, this is often instantiated as ",(0,t.jsx)(n.code,{children:"vector_store"}),", but some vector store components use a different name, such as the provider name."]}),"\n",(0,t.jsx)(n.p,{children:"Some LangChain classes don't expose all possible options as component parameters.\nDepending on the provider, these options might use default values or allow modification through environment variables, if they are supported in Langflow.\nFor information about specific options, see the LangChain API reference and vector store provider's documentation."})]})}function i(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},80223:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>o});var t=r(74848),s=r(28453);const o=[];function c(e){const n={p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(n.p,{children:["Some parameters are conditional, and they are only available after you set other parameters or select specific options for other parameters.\nConditional parameters may not be visible on the ",(0,t.jsx)(n.strong,{children:"Controls"})," pane until you set the required dependencies."]})}function i(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},88690:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/component-chroma-db-b69a08e861be3451fe6f2992e203f516.png"},90116:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>m,contentTitle:()=>p,default:()=>j,frontMatter:()=>l,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"Components/bundles-chroma","title":"Chroma","description":"Bundles contain custom components that support specific third-party integrations with Langflow.","source":"@site/docs/Components/bundles-chroma.mdx","sourceDirName":"Components","slug":"/bundles-chroma","permalink":"/bundles-chroma","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Chroma","slug":"/bundles-chroma"},"sidebar":"docs","previous":{"title":"Cassandra","permalink":"/bundles-cassandra"},"next":{"title":"Cleanlab","permalink":"/bundles-cleanlab"}}');var s=r(74848),o=r(28453),c=r(17886),i=r(31929),a=r(80223),d=r(90465),h=r(50005);const l={title:"Chroma",slug:"/bundles-chroma"},p=void 0,m={},u=[{value:"Chroma DB",id:"chroma-db",level:2},...h.RM,...d.RM,{value:"Use the Chroma DB component in a flow",id:"use-the-chroma-db-component-in-a-flow",level:3},{value:"Chroma DB parameters",id:"chroma-db-parameters",level:3},...i.RM,...a.RM,{value:"See also",id:"see-also",level:2}];function x(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(c.A,{name:"Blocks","aria-hidden":"true"})," ",(0,s.jsx)(n.a,{href:"/components-bundle-components",children:(0,s.jsx)(n.strong,{children:"Bundles"})})," contain custom components that support specific third-party integrations with Langflow."]}),"\n",(0,s.jsxs)(n.p,{children:["This page describes the components that are available in the ",(0,s.jsx)(n.strong,{children:"Chroma"})," bundle."]}),"\n",(0,s.jsx)(n.h2,{id:"chroma-db",children:"Chroma DB"}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.strong,{children:"Chroma DB"})," component to read and write to a Chroma database using an instance of ",(0,s.jsx)(n.code,{children:"Chroma"})," vector store.\nIncludes support for remote or in-memory instances with or without persistence."]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"About vector store instances"}),(0,s.jsx)(h.Ay,{})]}),"\n",(0,s.jsx)(n.p,{children:"When writing, the component can create a new database or collection at the specified location."}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"An ephemeral (non-persistent) local Chroma vector store is helpful for testing vector search flows where you don't need to retain the database."})}),"\n",(0,s.jsx)(d.Ay,{}),"\n",(0,s.jsx)(n.h3,{id:"use-the-chroma-db-component-in-a-flow",children:"Use the Chroma DB component in a flow"}),"\n",(0,s.jsxs)(n.p,{children:["The following example flow uses one ",(0,s.jsx)(n.strong,{children:"Chroma DB"})," component for both reads and writes:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"ChromaDB receiving split text",src:r(88690).A+"",width:"4000",height:"2694"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["When writing, it splits ",(0,s.jsx)(n.code,{children:"Data"})," from a ",(0,s.jsxs)(n.a,{href:"/components-data#url",children:[(0,s.jsx)(n.strong,{children:"URL"})," component"]})," into chunks, computes embeddings with attached ",(0,s.jsx)(n.strong,{children:"Embedding Model"})," component, and then loads the chunks and embeddings into the Chroma vector store.\nTo trigger writes, click ",(0,s.jsx)(c.A,{name:"Play","aria-hidden":"true"})," ",(0,s.jsx)(n.strong,{children:"Run component"})," on the ",(0,s.jsx)(n.strong,{children:"Chroma DB"})," component."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["When reading, it uses chat input to perform a similarity search on the vector store, and then print the search results to the chat.\nTo trigger reads, open the ",(0,s.jsx)(n.strong,{children:"Playground"})," and enter a chat message."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["After running the flow once, you can click ",(0,s.jsx)(c.A,{name:"TextSearch","aria-hidden":"true"})," ",(0,s.jsx)(n.strong,{children:"Inspect Output"})," on each component to understand how the data transformed as it passed from component to component."]}),"\n",(0,s.jsx)(n.h3,{id:"chroma-db-parameters",children:"Chroma DB parameters"}),"\n",(0,s.jsx)(n.p,{children:"You can inspect a vector store component's parameters to learn more about the inputs it accepts, the features it supports, and how to configure it."}),"\n",(0,s.jsx)(i.Ay,{}),"\n",(0,s.jsx)(a.Ay,{}),"\n",(0,s.jsxs)(n.p,{children:["For information about accepted values and functionality, see the provider's documentation or inspect ",(0,s.jsx)(n.a,{href:"/concepts-components#component-code",children:"component code"}),"."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.strong,{children:"Collection Name"})," (",(0,s.jsx)(n.code,{children:"collection_name"}),")"]}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsxs)(n.td,{children:["Input parameter.  The name of your Chroma vector store collection. Default: ",(0,s.jsx)(n.code,{children:"langflow"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.strong,{children:"Persist Directory"})," (",(0,s.jsx)(n.code,{children:"persist_directory"}),")"]}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsxs)(n.td,{children:["Input parameter. To persist the Chroma database, enter a relative or absolute path to a directory to store the ",(0,s.jsx)(n.code,{children:"chroma.sqlite3"})," file. Leave empty for an ephemeral database. When reading or writing to an existing persistent database, specify the path to the persistent directory."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.strong,{children:"Ingest Data"})," (",(0,s.jsx)(n.code,{children:"ingest_data"}),")"]}),(0,s.jsx)(n.td,{children:"Data or DataFrame"}),(0,s.jsxs)(n.td,{children:["Input parameter. ",(0,s.jsx)(n.code,{children:"Data"})," or ",(0,s.jsx)(n.code,{children:"DataFrame"})," input containing the records to write to the vector store. Only relevant for writes."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.strong,{children:"Search Query"})," (",(0,s.jsx)(n.code,{children:"search_query"}),")"]}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"Input parameter. The query to use for vector search. Only relevant for reads."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.strong,{children:"Cache Vector Store"})," (",(0,s.jsx)(n.code,{children:"cache_vector_store"}),")"]}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsxs)(n.td,{children:["Input parameter. If ",(0,s.jsx)(n.code,{children:"true"}),", the component caches the vector store in memory for faster reads. Default: Enabled (",(0,s.jsx)(n.code,{children:"true"}),")."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.strong,{children:"Embedding"})," (",(0,s.jsx)(n.code,{children:"embedding"}),")"]}),(0,s.jsx)(n.td,{children:"Embeddings"}),(0,s.jsxs)(n.td,{children:["Input parameter. The embedding function to use for the vector store. By default, Chroma DB uses its built-in embeddings model, or you can attach an ",(0,s.jsx)(n.strong,{children:"Embedding Model"})," component to use a different provider or model."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.strong,{children:"CORS Allow Origins"})," (",(0,s.jsx)(n.code,{children:"chroma_server_cors_allow_origins"}),")"]}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"Input parameter. The allowed CORS origins for the Chroma server."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.strong,{children:"Chroma Server Host"})," (",(0,s.jsx)(n.code,{children:"chroma_server_host"}),")"]}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"Input parameter. The host for the Chroma server."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.strong,{children:"Chroma Server HTTP Port"})," (",(0,s.jsx)(n.code,{children:"chroma_server_http_port"}),")"]}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsx)(n.td,{children:"Input parameter. The HTTP port for the Chroma server."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.strong,{children:"Chroma Server gRPC Port"})," (",(0,s.jsx)(n.code,{children:"chroma_server_grpc_port"}),")"]}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsx)(n.td,{children:"Input parameter. The gRPC port for the Chroma server."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.strong,{children:"Chroma Server SSL Enabled"})," (",(0,s.jsx)(n.code,{children:"chroma_server_ssl_enabled"}),")"]}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:"Input parameter. Enable SSL for the Chroma server."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.strong,{children:"Allow Duplicates"})," (",(0,s.jsx)(n.code,{children:"allow_duplicates"}),")"]}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsxs)(n.td,{children:["Input parameter. If ",(0,s.jsx)(n.code,{children:"true"})," (default), writes don't check for existing duplicates in the collection, allowing you to store multiple copies of the same content. If ",(0,s.jsx)(n.code,{children:"false"}),", writes won't add documents that match existing documents already present in the collection. If ",(0,s.jsx)(n.code,{children:"false"}),", it can strictly enforce deduplication by searching the entire collection or only search the number of records, specified in ",(0,s.jsx)(n.code,{children:"limit"}),". Only relevant for writes."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.strong,{children:"Search Type"})," (",(0,s.jsx)(n.code,{children:"search_type"}),")"]}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsxs)(n.td,{children:["Input parameter. The type of search to perform, either ",(0,s.jsx)(n.code,{children:"Similarity"})," or ",(0,s.jsx)(n.code,{children:"MMR"}),". Only relevant for reads."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.strong,{children:"Number of Results"})," (",(0,s.jsx)(n.code,{children:"number_of_results"}),")"]}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsxs)(n.td,{children:["Input parameter. The number of search results to return. Default: ",(0,s.jsx)(n.code,{children:"10"}),". Only relevant for reads."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.strong,{children:"Limit"})," (",(0,s.jsx)(n.code,{children:"limit"}),")"]}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsxs)(n.td,{children:["Input parameter. Limit the number of records to compare when ",(0,s.jsx)(n.strong,{children:"Allow Duplicates"})," is ",(0,s.jsx)(n.code,{children:"false"}),". This can help improve performance when writing to large collections, but it can result in some duplicate records. Only relevant for writes."]})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsxs)(n.a,{href:"/components-bundle-components#vector-stores-bundle",children:[(0,s.jsx)(n.strong,{children:"Local DB"})," component"]})}),"\n"]})]})}function j(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},90465:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>o});var t=r(74848),s=r(28453);const o=[];function c(e){const n={a:"a",code:"code",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(n.p,{children:["If you use a vector store component to query your vector database, it produces search results that you can pass to downstream components in your flow as a list of ",(0,t.jsx)(n.a,{href:"/data-types#data",children:(0,t.jsx)(n.code,{children:"Data"})})," objects or a tabular ",(0,t.jsx)(n.a,{href:"/data-types#dataframe",children:(0,t.jsx)(n.code,{children:"DataFrame"})}),".\nIf both types are supported, you can set the format near the vector store component's output port in the visual editor."]})}function i(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);